
//
// StyleDictionary.swift
//

// Do not edit directly
// Generated on Mon, 12 Sep 2022 09:41:05 GMT


import UIKit

public class StyleDictionary {
    public static let bordersDashedOutside = [object Object]
    public static let bordersSingle = [object Object]
    public static let bordersSingleStyle = [object Object]
    public static let bordersUnsupportedMultipleBorders = [object Object]
    public static let breakpointsLg = 1280
    public static let breakpointsMd = 1024
    public static let breakpointsSm = 768
    public static let colorColorBaseBlack = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let colorColorBaseWhite = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let colorColorDanger100 = UIColor(red: 0.996, green: 0.886, blue: 0.886, alpha: 1)
    public static let colorColorDanger200 = UIColor(red: 0.996, green: 0.792, blue: 0.792, alpha: 1)
    public static let colorColorDanger300 = UIColor(red: 0.988, green: 0.647, blue: 0.647, alpha: 1)
    public static let colorColorDanger400 = UIColor(red: 0.973, green: 0.443, blue: 0.443, alpha: 1)
    public static let colorColorDanger50 = UIColor(red: 0.996, green: 0.949, blue: 0.949, alpha: 1)
    public static let colorColorDanger500 = UIColor(red: 0.937, green: 0.267, blue: 0.267, alpha: 1)
    public static let colorColorDanger600 = UIColor(red: 0.863, green: 0.149, blue: 0.149, alpha: 1)
    public static let colorColorDanger700 = UIColor(red: 0.725, green: 0.110, blue: 0.110, alpha: 1)
    public static let colorColorDanger800 = UIColor(red: 0.600, green: 0.106, blue: 0.106, alpha: 1)
    public static let colorColorDanger900 = UIColor(red: 0.498, green: 0.114, blue: 0.114, alpha: 1)
    public static let colorColorInformative100 = UIColor(red: 0.859, green: 0.918, blue: 0.996, alpha: 1)
    public static let colorColorInformative200 = UIColor(red: 0.749, green: 0.859, blue: 0.996, alpha: 1)
    public static let colorColorInformative300 = UIColor(red: 0.576, green: 0.773, blue: 0.992, alpha: 1)
    public static let colorColorInformative400 = UIColor(red: 0.376, green: 0.647, blue: 0.980, alpha: 1)
    public static let colorColorInformative50 = UIColor(red: 0.937, green: 0.965, blue: 1.000, alpha: 1)
    public static let colorColorInformative500 = UIColor(red: 0.231, green: 0.510, blue: 0.965, alpha: 1)
    public static let colorColorInformative600 = UIColor(red: 0.145, green: 0.388, blue: 0.922, alpha: 1)
    public static let colorColorInformative700 = UIColor(red: 0.114, green: 0.306, blue: 0.847, alpha: 1)
    public static let colorColorInformative800 = UIColor(red: 0.118, green: 0.251, blue: 0.686, alpha: 1)
    public static let colorColorInformative900 = UIColor(red: 0.118, green: 0.227, blue: 0.541, alpha: 1)
    public static let colorColorNeutral100 = UIColor(red: 0.945, green: 0.961, blue: 0.976, alpha: 1)
    public static let colorColorNeutral200 = UIColor(red: 0.886, green: 0.910, blue: 0.941, alpha: 1)
    public static let colorColorNeutral300 = UIColor(red: 0.796, green: 0.835, blue: 0.882, alpha: 1)
    public static let colorColorNeutral400 = UIColor(red: 0.580, green: 0.639, blue: 0.722, alpha: 1)
    public static let colorColorNeutral50 = UIColor(red: 0.973, green: 0.980, blue: 0.988, alpha: 1)
    public static let colorColorNeutral500 = UIColor(red: 0.392, green: 0.455, blue: 0.545, alpha: 1)
    public static let colorColorNeutral600 = UIColor(red: 0.278, green: 0.333, blue: 0.412, alpha: 1)
    public static let colorColorNeutral700 = UIColor(red: 0.200, green: 0.255, blue: 0.333, alpha: 1)
    public static let colorColorNeutral800 = UIColor(red: 0.118, green: 0.161, blue: 0.231, alpha: 1)
    public static let colorColorNeutral900 = UIColor(red: 0.059, green: 0.090, blue: 0.165, alpha: 1)
    public static let colorColorPrimary100 = UIColor(red: 0.929, green: 0.914, blue: 0.996, alpha: 1)
    public static let colorColorPrimary200 = UIColor(red: 0.867, green: 0.839, blue: 0.996, alpha: 1)
    public static let colorColorPrimary300 = UIColor(red: 0.769, green: 0.710, blue: 0.992, alpha: 1)
    public static let colorColorPrimary400 = UIColor(red: 0.655, green: 0.545, blue: 0.980, alpha: 1)
    public static let colorColorPrimary50 = UIColor(red: 0.961, green: 0.953, blue: 1.000, alpha: 1)
    public static let colorColorPrimary500 = UIColor(red: 0.545, green: 0.361, blue: 0.965, alpha: 1)
    public static let colorColorPrimary600 = UIColor(red: 0.486, green: 0.227, blue: 0.929, alpha: 1)
    public static let colorColorPrimary700 = UIColor(red: 0.427, green: 0.157, blue: 0.851, alpha: 1)
    public static let colorColorPrimary800 = UIColor(red: 0.357, green: 0.129, blue: 0.714, alpha: 1)
    public static let colorColorPrimary900 = UIColor(red: 0.298, green: 0.114, blue: 0.584, alpha: 1)
    public static let colorColorSuccess100 = UIColor(red: 0.863, green: 0.988, blue: 0.906, alpha: 1)
    public static let colorColorSuccess200 = UIColor(red: 0.733, green: 0.969, blue: 0.816, alpha: 1)
    public static let colorColorSuccess300 = UIColor(red: 0.525, green: 0.937, blue: 0.675, alpha: 1)
    public static let colorColorSuccess400 = UIColor(red: 0.290, green: 0.871, blue: 0.502, alpha: 1)
    public static let colorColorSuccess50 = UIColor(red: 0.941, green: 0.992, blue: 0.957, alpha: 1)
    public static let colorColorSuccess500 = UIColor(red: 0.133, green: 0.773, blue: 0.369, alpha: 1)
    public static let colorColorSuccess600 = UIColor(red: 0.086, green: 0.639, blue: 0.290, alpha: 1)
    public static let colorColorSuccess700 = UIColor(red: 0.082, green: 0.502, blue: 0.239, alpha: 1)
    public static let colorColorSuccess800 = UIColor(red: 0.086, green: 0.396, blue: 0.204, alpha: 1)
    public static let colorColorSuccess900 = UIColor(red: 0.078, green: 0.325, blue: 0.176, alpha: 1)
    public static let colorColorWarning100 = UIColor(red: 0.996, green: 0.953, blue: 0.780, alpha: 1)
    public static let colorColorWarning200 = UIColor(red: 0.992, green: 0.902, blue: 0.541, alpha: 1)
    public static let colorColorWarning300 = UIColor(red: 0.988, green: 0.827, blue: 0.302, alpha: 1)
    public static let colorColorWarning400 = UIColor(red: 0.984, green: 0.749, blue: 0.141, alpha: 1)
    public static let colorColorWarning50 = UIColor(red: 1.000, green: 0.984, blue: 0.922, alpha: 1)
    public static let colorColorWarning500 = UIColor(red: 0.961, green: 0.620, blue: 0.043, alpha: 1)
    public static let colorColorWarning600 = UIColor(red: 0.851, green: 0.467, blue: 0.024, alpha: 1)
    public static let colorColorWarning700 = UIColor(red: 0.706, green: 0.325, blue: 0.035, alpha: 1)
    public static let colorColorWarning800 = UIColor(red: 0.573, green: 0.251, blue: 0.055, alpha: 1)
    public static let colorColorWarning900 = UIColor(red: 0.471, green: 0.208, blue: 0.059, alpha: 1)
    public static let colorColorsEmpty = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let colorColorsMultipleFills0 = UIColor(red: 0.251, green: 1.000, blue: 0.729, alpha: 1)
    public static let colorColorsMultipleFills1 = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.10196078431372549)
    public static let colorColorsRefBlue = UIColor(red: 0.016, green: 0.290, blue: 1.000, alpha: 1)
    public static let colorColorsSemiRed = UIColor(red: 1.000, green: 0.373, blue: 0.016, alpha: 0.5019607843137255)
    public static let colorColorsSingleBlue = UIColor(red: 0.016, green: 0.290, blue: 1.000, alpha: 1)
    public static let colorColorsSpecialCharacters = UIColor(red: 0.251, green: 0.875, blue: 0.314, alpha: 1)
    public static let colorColorsSpecialCharactersNderung = UIColor(red: 0.204, green: 0.337, blue: 0.686, alpha: 1)
    public static let effectDropShadowSingle = [object Object]
    public static let effectEffectShadow2xl = [object Object]
    public static let effectEffectShadowInner = [object Object]
    public static let effectEffectShadowLg0 = [object Object]
    public static let effectEffectShadowLg1 = [object Object]
    public static let effectEffectShadowMd0 = [object Object]
    public static let effectEffectShadowMd1 = [object Object]
    public static let effectEffectShadowSm0 = [object Object]
    public static let effectEffectShadowSm1 = [object Object]
    public static let effectEffectShadowXl0 = [object Object]
    public static let effectEffectShadowXl1 = [object Object]
    public static let effectEffectShadowXs = [object Object]
    public static let effectInnerShadowMultiple0 = [object Object]
    public static let effectInnerShadowMultiple1 = [object Object]
    public static let effectInnerShadowMultiple2 = [object Object]
    public static let fontBodyExtraBoldCondensedItalic = "[object Object]"
    public static let fontBodyH3 = "[object Object]"
    public static let fontBodyH4StrikeThrough = "[object Object]"
    public static let fontBodyItalic = "[object Object]"
    public static let fontBodyMediumExtendedItalic = "[object Object]"
    public static let fontBodySuper = "[object Object]"
    public static let fontFontBodyL = "[object Object]"
    public static let fontFontBodyM = "[object Object]"
    public static let fontFontBodyS = "[object Object]"
    public static let fontFontHeading1 = "[object Object]"
    public static let fontFontHeading2 = "[object Object]"
    public static let fontFontSection = "[object Object]"
    public static let fontFontSubtitle = "[object Object]"
    public static let gradientGradientMultiplegrad0 = [object Object]
    public static let gradientGradientMultiplegrad1 = [object Object]
    public static let gradientGradientMultiplegrad2 = [object Object]
    public static let gradientGradientMultiplegrad3 = [object Object]
    public static let gradientGradientSingleWithMultipleColorStops = [object Object]
    public static let gridMultiple0 = [object Object]
    public static let gridMultiple1 = [object Object]
    public static let gridMultiple2 = [object Object]
    public static let gridMultiple3 = [object Object]
    public static let gridMultiple4 = [object Object]
    public static let gridMultiple5 = [object Object]
    public static let gridMultiple6 = [object Object]
    public static let gridMultiple7 = [object Object]
    public static let gridSingle = [object Object]
    public static let motionBouncy = [object Object]
    public static let motionCustomSpring = [object Object]
    public static let motionDissolve = [object Object]
    public static let motionMoveIn = [object Object]
    public static let motionPush = [object Object]
    public static let motionSmart = [object Object]
    public static let opacities025 = 0.25
    public static let opacityFull = 1
    public static let opacityHalf = 0.5
    public static let radiiMixed = [object Object]
    public static let radiiSmoothing = [object Object]
    public static let radius5 = [object Object]
    public static let sizes32 = 32.72
    public static let sizes40 = 40
    public static let sizes60 = 60
    public static let sizes80 = 80
    public static let sizesFrame = 32
    public static let sizesInVariant120 = 120
    public static let sizesInVariant60 = 60
    public static let sizesInVariant90 = 90
    public static let sizesPlainToken = 200
    public static let sizesRect = 32
    public static let sizesShapeInComponent = 32
    public static let sizesTokenInFrame = 200
    public static let sizesTokenInGroup = 200
    public static let spacing10 = [object Object]
    public static let spacingMixed = [object Object]
    public static let spacingTop = [object Object]
    public static let typographyBodyExtraBoldCondensedItalicFontFamily = Akzidenz-Grotesk Pro
    public static let typographyBodyExtraBoldCondensedItalicFontSize = 12
    public static let typographyBodyExtraBoldCondensedItalicFontStretch = condensed
    public static let typographyBodyExtraBoldCondensedItalicFontStyle = italic
    public static let typographyBodyExtraBoldCondensedItalicFontWeight = 800
    public static let typographyBodyExtraBoldCondensedItalicLetterSpacing = 0
    public static let typographyBodyExtraBoldCondensedItalicLineHeight = 14.4
    public static let typographyBodyExtraBoldCondensedItalicParagraphIndent = 0
    public static let typographyBodyExtraBoldCondensedItalicParagraphSpacing = 0
    public static let typographyBodyExtraBoldCondensedItalicTextCase = none
    public static let typographyBodyExtraBoldCondensedItalicTextDecoration = none
    public static let typographyBodyH3FontFamily = Akzidenz-Grotesk Pro
    public static let typographyBodyH3FontSize = 20
    public static let typographyBodyH3FontStretch = condensed
    public static let typographyBodyH3FontStyle = normal
    public static let typographyBodyH3FontWeight = 700
    public static let typographyBodyH3LetterSpacing = 0.4
    public static let typographyBodyH3LineHeight = 32
    public static let typographyBodyH3ParagraphIndent = 5
    public static let typographyBodyH3ParagraphSpacing = 8
    public static let typographyBodyH3TextCase = uppercase
    public static let typographyBodyH3TextDecoration = none
    public static let typographyBodyH4StrikeThroughFontFamily = Roboto
    public static let typographyBodyH4StrikeThroughFontSize = 16
    public static let typographyBodyH4StrikeThroughFontStretch = normal
    public static let typographyBodyH4StrikeThroughFontStyle = italic
    public static let typographyBodyH4StrikeThroughFontWeight = 500
    public static let typographyBodyH4StrikeThroughLetterSpacing = 0
    public static let typographyBodyH4StrikeThroughLineHeight = 19.2
    public static let typographyBodyH4StrikeThroughParagraphIndent = 0
    public static let typographyBodyH4StrikeThroughParagraphSpacing = 0
    public static let typographyBodyH4StrikeThroughTextCase = none
    public static let typographyBodyH4StrikeThroughTextDecoration = line-through
    public static let typographyBodyItalicFontFamily = Roboto
    public static let typographyBodyItalicFontSize = 12
    public static let typographyBodyItalicFontStretch = normal
    public static let typographyBodyItalicFontStyle = italic
    public static let typographyBodyItalicFontWeight = 400
    public static let typographyBodyItalicLetterSpacing = 0
    public static let typographyBodyItalicLineHeight = 14
    public static let typographyBodyItalicParagraphIndent = 0
    public static let typographyBodyItalicParagraphSpacing = 0
    public static let typographyBodyItalicTextCase = none
    public static let typographyBodyItalicTextDecoration = none
    public static let typographyBodyMediumExtendedItalicFontFamily = Akzidenz-Grotesk Pro
    public static let typographyBodyMediumExtendedItalicFontSize = 20
    public static let typographyBodyMediumExtendedItalicFontStretch = expanded
    public static let typographyBodyMediumExtendedItalicFontStyle = italic
    public static let typographyBodyMediumExtendedItalicFontWeight = 500
    public static let typographyBodyMediumExtendedItalicLetterSpacing = 0
    public static let typographyBodyMediumExtendedItalicLineHeight = 24
    public static let typographyBodyMediumExtendedItalicParagraphIndent = 0
    public static let typographyBodyMediumExtendedItalicParagraphSpacing = 0
    public static let typographyBodyMediumExtendedItalicTextCase = none
    public static let typographyBodyMediumExtendedItalicTextDecoration = none
    public static let typographyBodySuperFontFamily = Akzidenz-Grotesk Pro
    public static let typographyBodySuperFontSize = 22
    public static let typographyBodySuperFontStretch = normal
    public static let typographyBodySuperFontStyle = normal
    public static let typographyBodySuperFontWeight = 900
    public static let typographyBodySuperLetterSpacing = 0
    public static let typographyBodySuperLineHeight = 26.4
    public static let typographyBodySuperParagraphIndent = 0
    public static let typographyBodySuperParagraphSpacing = 0
    public static let typographyBodySuperTextCase = none
    public static let typographyBodySuperTextDecoration = none
    public static let typographyTypographyBodyLFontFamily = Inter
    public static let typographyTypographyBodyLFontSize = 14
    public static let typographyTypographyBodyLFontStretch = normal
    public static let typographyTypographyBodyLFontStyle = normal
    public static let typographyTypographyBodyLFontWeight = 600
    public static let typographyTypographyBodyLLetterSpacing = 0
    public static let typographyTypographyBodyLLineHeight = 20
    public static let typographyTypographyBodyLParagraphIndent = 0
    public static let typographyTypographyBodyLParagraphSpacing = 0
    public static let typographyTypographyBodyLTextCase = none
    public static let typographyTypographyBodyLTextDecoration = none
    public static let typographyTypographyBodyMFontFamily = Inter
    public static let typographyTypographyBodyMFontSize = 14
    public static let typographyTypographyBodyMFontStretch = normal
    public static let typographyTypographyBodyMFontStyle = normal
    public static let typographyTypographyBodyMFontWeight = 500
    public static let typographyTypographyBodyMLetterSpacing = 0
    public static let typographyTypographyBodyMLineHeight = 20
    public static let typographyTypographyBodyMParagraphIndent = 0
    public static let typographyTypographyBodyMParagraphSpacing = 0
    public static let typographyTypographyBodyMTextCase = none
    public static let typographyTypographyBodyMTextDecoration = none
    public static let typographyTypographyBodySFontFamily = Inter
    public static let typographyTypographyBodySFontSize = 14
    public static let typographyTypographyBodySFontStretch = normal
    public static let typographyTypographyBodySFontStyle = normal
    public static let typographyTypographyBodySFontWeight = 400
    public static let typographyTypographyBodySLetterSpacing = 0
    public static let typographyTypographyBodySLineHeight = 20
    public static let typographyTypographyBodySParagraphIndent = 0
    public static let typographyTypographyBodySParagraphSpacing = 0
    public static let typographyTypographyBodySTextCase = none
    public static let typographyTypographyBodySTextDecoration = none
    public static let typographyTypographyHeading1FontFamily = Inter
    public static let typographyTypographyHeading1FontSize = 32
    public static let typographyTypographyHeading1FontStretch = normal
    public static let typographyTypographyHeading1FontStyle = normal
    public static let typographyTypographyHeading1FontWeight = 600
    public static let typographyTypographyHeading1LetterSpacing = 0
    public static let typographyTypographyHeading1LineHeight = 40
    public static let typographyTypographyHeading1ParagraphIndent = 0
    public static let typographyTypographyHeading1ParagraphSpacing = 0
    public static let typographyTypographyHeading1TextCase = none
    public static let typographyTypographyHeading1TextDecoration = none
    public static let typographyTypographyHeading2FontFamily = Inter
    public static let typographyTypographyHeading2FontSize = 24
    public static let typographyTypographyHeading2FontStretch = normal
    public static let typographyTypographyHeading2FontStyle = normal
    public static let typographyTypographyHeading2FontWeight = 600
    public static let typographyTypographyHeading2LetterSpacing = 0
    public static let typographyTypographyHeading2LineHeight = 32
    public static let typographyTypographyHeading2ParagraphIndent = 0
    public static let typographyTypographyHeading2ParagraphSpacing = 0
    public static let typographyTypographyHeading2TextCase = none
    public static let typographyTypographyHeading2TextDecoration = none
    public static let typographyTypographySectionFontFamily = Inter
    public static let typographyTypographySectionFontSize = 12
    public static let typographyTypographySectionFontStretch = normal
    public static let typographyTypographySectionFontStyle = normal
    public static let typographyTypographySectionFontWeight = 600
    public static let typographyTypographySectionLetterSpacing = 0.5
    public static let typographyTypographySectionLineHeight = 20
    public static let typographyTypographySectionParagraphIndent = 0
    public static let typographyTypographySectionParagraphSpacing = 0
    public static let typographyTypographySectionTextCase = uppercase
    public static let typographyTypographySectionTextDecoration = none
    public static let typographyTypographySubtitleFontFamily = Inter
    public static let typographyTypographySubtitleFontSize = 18
    public static let typographyTypographySubtitleFontStretch = normal
    public static let typographyTypographySubtitleFontStyle = normal
    public static let typographyTypographySubtitleFontWeight = 500
    public static let typographyTypographySubtitleLetterSpacing = 0
    public static let typographyTypographySubtitleLineHeight = 32
    public static let typographyTypographySubtitleParagraphIndent = 0
    public static let typographyTypographySubtitleParagraphSpacing = 0
    public static let typographyTypographySubtitleTextCase = none
    public static let typographyTypographySubtitleTextDecoration = none
}
